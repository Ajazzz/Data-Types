# List:
# A list is a collection of items, which can be of different types such as strings, integers, or even other lists. 
# Lists are mutable, meaning you can change their contents.


#Lists are a commonly used data type in Python, and there are a few common problems that can arise when working with them. 
#Here are some examples of list problems and solutions:

#Adding elements to a list: To add an element to a list, you can use the append() method. For example:

fruits = ['apple', 'banana', 'cherry']
fruits.append('orange')
print(fruits) # Output: ['apple', 'banana', 'cherry', 'orange']

#Removing elements from a list: To remove an element from a list, you can use the remove() method. For example:

fruits = ['apple', 'banana', 'cherry']
fruits.remove('banana')
print(fruits) # Output: ['apple', 'cherry']

#Sorting a list: To sort a list in ascending order, you can use the sort() method. For example:

numbers = [3, 5, 1, 4, 2]
numbers.sort()
print(numbers) # Output: [1, 2, 3, 4, 5]

#Reversing a list: To reverse the order of a list, you can use the reverse() method. For example:

fruits = ['apple', 'banana', 'cherry']
fruits.reverse()
print(fruits) # Output: ['cherry', 'banana', 'apple']

#Accessing elements in a list: To access an element in a list, you can use the index of the element within square brackets. For example:

fruits = ['apple', 'banana', 'cherry']
print(fruits[0]) # Output: 'apple'

#Checking if an element is in a list: To check if an element is in a list, you can use the in keyword. For example:

fruits = ['apple', 'banana', 'cherry']
print('banana' in fruits) # Output: True
print('orange' in fruits) # Output: False

